<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.UserMapper">

    <sql id="baseCol">
        t_user.id t_user_id, t_user.username t_user_username, t_user.password t_user_password,
        t_user.email t_user_email, t_user.nickname t_user_nickname, t_user.birth t_user_birth,
        t_user.logintime t_user_logintime, t_user.dept_id t_user_dept_id
    </sql>

    <resultMap id="baseResultMap" type="com.example.model.po.User">
        <id column="t_user_id" property="id" />
        <result column="t_user_username" property="username" />
        <result column="t_user_password" property="password" />
        <result column="t_user_email" property="email" />
        <result column="t_user_nickname" property="nickname" />
        <result column="t_user_birth" property="birth" />
        <result column="t_user_logintime" property="logintime" />
        <result column="t_user_dept_id" property="deptId" />
    </resultMap>

    <resultMap id="resultMap" type="com.example.model.po.User" extends="baseResultMap">
        <association column="t_user_dept_id" property="dept" resultMap="com.example.mapper.DeptMapper.baseResultMap" />
        <collection column="t_user_id" property="roles" resultMap="com.example.mapper.RoleMapper.resultMap" />
    </resultMap>

    <select id="customSelectById" parameterType="int" resultMap="resultMap">
        select <include refid="baseCol" />,
               <include refid="com.example.mapper.DeptMapper.baseCol" />,
               <include refid="com.example.mapper.RoleMapper.baseCol" />,
               <include refid="com.example.mapper.ResourceMapper.baseCol" />
        from t_user t_user
        left join t_dept t_dept on t_dept.id = t_user.dept_id
        left join t_user_role_link t_user_role_link on t_user_role_link.user_id = t_user.id
        left join t_role t_role on t_role.id = t_user_role_link.role_id
        left join t_role_resource_link t_role_resource_link on t_role.id = t_role_resource_link.role_id
        left join t_resource t_resource on t_role_resource_link.resource_id = t_resource.id
        where t_user.id = #{id}
        order by t_role.role_seq, t_resource.resource_seq
    </select>

    <select id="customSelectOne" parameterType="com.example.params.Params" resultMap="resultMap">
        select <include refid="baseCol" />,
               <include refid="com.example.mapper.DeptMapper.baseCol" />,
               <include refid="com.example.mapper.RoleMapper.baseCol" />,
               <include refid="com.example.mapper.ResourceMapper.baseCol" />
        from t_user t_user
        left join t_dept t_dept on t_dept.id = t_user.dept_id
        left join t_user_role_link t_user_role_link on t_user_role_link.user_id = t_user.id
        left join t_role t_role on t_role.id = t_user_role_link.role_id
        left join t_role_resource_link t_role_resource_link on t_role.id = t_role_resource_link.role_id
        left join t_resource t_resource on t_role_resource_link.resource_id = t_resource.id
        <where>
            <if test=" params.entity.username != null and params.entity.username != ''.toString() ">
                and t_user.username = #{params.entity.username}
            </if>
            <if test=" params.entity.email != null and params.entity.email != ''.toString() ">
                and t_user.email = #{params.entity.email}
            </if>
        </where>
        order by t_role.role_seq, t_resource.resource_seq
    </select>

</mapper>
